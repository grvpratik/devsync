import type { Metadata } from "next";

import { cookies } from "next/headers";

import { geistMono, geistSans } from "./font";
import { Toaster } from "www/components/ui/toaster";
import { AuthProvider } from "www/wrapper/auth-provider";

import { ThemeProvider } from "www/wrapper/theme-provider";

import "www/styles/globals.css";
import { api, isSuccess } from "www/lib/handler";
import { getSessionCookie } from "www/hooks/use-server-session";

export const metadata: Metadata = {
	title: "Create Next App",
	description: "Generated by create next app",
};

export default async function RootLayout({
	children,
}: Readonly<{
	children: React.ReactNode;
}>) {
	const session = await getSessionCookie();
	const result = await api.post<any>(`/user/auth/data`, {}, { session });
	console.log(result, "ROOt");
	const user = isSuccess(result) ? result : null;
	return (
		<html lang="en">
			<body
				className={`${geistSans.variable} ${geistMono.variable} antialiased  font-sans `}
			>
				<ThemeProvider
					attribute="class"
					defaultTheme="system"
					enableSystem
					disableTransitionOnChange
				>
					<AuthProvider initialUser={(user && user.user) ?? null}>
						{children}
						<Toaster />
					</AuthProvider>
				</ThemeProvider>
			</body>
		</html>
	);
}
